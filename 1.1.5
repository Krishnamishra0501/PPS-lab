import mathdef
find_roots(a,b,c):
  discriminant = b**2 - 4*a*c
  if discriminant > 0:
    root1 = (-b + math.sqrt(discriminant)) / (2 * a)
    root2 = (-b - math.sqrt(discriminant)) / (2 * a)
    return root1,root2
  elif discriminant == 0:
    root = -b / (2 * a)
    return (root,)
  else:
    real_part = -b / (2 * a)
    imaginary_part = math.sqrt(abs(discriminant)) / (2 * a)
    root1 = complex(real_part,imaginary_part)
    root2 = complex(real_part,-imaginary_part)
    return root1,root2
a = float(input('a: '))
b = float(input('b: '))
c = float(input('c: '))
roots = find_roots(a,b,c)
if len(roots) == 1:
  print(f'The root is: {roots[0]:.2f}')
elif len(roots) == 2:
  print(f'The roots are: {roots[0]:.2f} and {roots[1]:.2f}')
else:
  print(f"The complex roots are {roots[0]:.2f} and {roots[1]:.2f}")
